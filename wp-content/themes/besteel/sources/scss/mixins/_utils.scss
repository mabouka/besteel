// - @include hidden()
// **********************************************************
// Hides an element but keeps it usable by Screen-readers
// **********************************************************

@mixin hidden(){
    position: absolute;
    top: -99999px;
    left: -99999px;
}


// - @include cover()
// **********************************************************
// sets an element in an absolute position, covering its
// relative parent.
// **********************************************************

@mixin cover(){
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}


// - @include clearfix([both|left|right])
// **********************************************************
// Default : both
// Reset float on parent-element of floated elements
// **********************************************************

@mixin clearfix($w:both){
    &:after{
        content: "";
        display: block;
        clear: $w;
    }
}


// - @include resetFW()
// **********************************************************
// cleares width and float on element.
// Usefull on responsive designs
// **********************************************************

@mixin resetFW(){
    width: auto;
    float: none;
}


// - @include rmUnit( $var: number+unit )
// **********************************************************
// removes units from variable values
// **********************************************************

@function rmUnit($var) {
    @return $var / ($var * 0 + 1);
}


// - @include clickableTransparentBg()
// **********************************************************
// Adds a transparent background to a clickable block-
// element. Why ? Because IE.
// **********************************************************

@mixin clickableTransparentBg() {
    background: url("../img/logo-besteel4.jpg") 0 0 no-repeat;
}

@function sqrt($r) {
    $x0: 1;
    $x1: $x0;
    @for $i from 1 through 10 {
        $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
        $x0: $x1;
    }
    @return $x1;
}
